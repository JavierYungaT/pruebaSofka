plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0'
	implementation("org.springdoc:springdoc-openapi-ui:1.4.6")
	implementation("org.postgresql:postgresql:42.7.1")
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.webjars:webjars-locator-core:0.50'
	implementation 'io.github.classgraph:classgraph:4.8.149'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
